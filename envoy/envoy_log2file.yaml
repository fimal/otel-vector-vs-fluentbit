admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 19000
# stats_sinks:
# - name: envoy.statsd
#   typed_config:
#     "@type": type.googleapis.com/envoy.config.metrics.v3.StatsdSink
#     address:
#       socket_address:
#         address: ${LOG_PROCESSOR_IP}
#         port_value: 8125
#     prefix: envoy.statsd.metrics
stats_flush_interval: 3s
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9000
      filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: envoy_stats
            access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: "/logs/access.log"
                  json_format:
                    auth: "%REQ(:AUTHORITY)%"
                    bytes_sent: "%BYTES_SENT%"
                    bytes_recv: "%BYTES_RECEIVED%"            
                    content_type: "%REQ(CONTENT-TYPE)%"
                    content_length: "%REQ(CONTENT-LENGTH)%"
                    downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                    downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
                    duration: "%DURATION%"
                    event_type: "access"
                    ind: "enforcer access"
                    protocol: "%PROTOCOL%"
                    req_method: "%REQ(:METHOD)%"
                    req_path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                    req_server_name: "%REQUESTED_SERVER_NAME%"
                    req_x_forward: "%REQ(X-FORWARDED-FOR)%"
                    req_xid: "%REQ(X-REQUEST-ID)%"                    
                    resp_code: "%RESPONSE_CODE%"
                    resp_duration: "%RESPONSE_DURATION%"
                    resp_flags: "%RESPONSE_FLAGS%"                                      
                    resp_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                    #resp_tx_duration: "%RESPONSE_TX_DURATION"                                     
                    start_time: "%START_TIME%"                    
                    upstream_cluster: "%UPSTREAM_CLUSTER%"                    
                    upstream_host: "%UPSTREAM_HOST%"
                    upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
                    waas_tag: "enforcer"
            http_filters:
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            route_config:
              name: local_route
              virtual_hosts:
              - name: local_service
                domains: ["*"]
                routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: app_cluster
    - name: lst-metrics
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 19010
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: envoy_metrics
            route_config:
              name: local_route
              virtual_hosts:
              - name: backend
                domains:
                - "*"
                routes:
                - match:
                    prefix: "/stats/prometheus"
                  route:
                    cluster: envoy_metrics
                - match:
                    prefix: "/metrics"
                  route:
                    cluster: envoy_metrics
                    regex_rewrite:
                      pattern:
                        regex: metrics
                      substitution: stats/prometheus?text_readouts
                response_headers_to_remove:
                - Server
            http_filters:
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            server_header_transformation: PASS_THROUGH
  clusters:
    - name: envoy_metrics
      type: STATIC
      connect_timeout: 1s
      load_assignment:
        cluster_name: envoy_metrics
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 127.0.0.1
                  port_value: 19000
    ### Application Cluster
    - name: app_cluster
      connect_timeout: 1s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: app_cluster
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: ${SERVICE_NAME}
                  port_value: ${SERVICE_PORT}